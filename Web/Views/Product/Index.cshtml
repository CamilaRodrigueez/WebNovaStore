@model Domain.DTO.Produdct.ProductDto
@{
    ViewData["Title"] = "List Invoice";
}
<div class="row">
    <div class="col-md-6">
        <h1>Listado de Productos</h1>
    </div>

    <div class="col-md-6">
        <button class="btn btn-primary float-end" onclick="modalNewProduct()">
            <i class="fas fa-plus-square"></i>
            Nuevo Pructo
        </button>
    </div>
</div>

<hr />

<div class="row">
    <div class="col-md-12">
        <table id="tblProduct" class="table " style="width:100% !important">
            <thead class="table-nova">
                <tr>
                    <th scope="col">Codigo</th>
                    <th scope="col">Nombre</th>
                    <th scope="col">Cantidad</th>
                    <th scope="col">Precio</th>
                    <th scope="col">Opciones</th>
                </tr>
            </thead>
            <tbody id="bodyProduct">
            </tbody>

        </table>
    </div>
</div>

@*Modal Artículos*@
<div class="modal fade" id="modalProduct" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="1" role="dialog" aria-labelledby="modalProductLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="idTitleProduct">Nuevo Producto</h5>
            </div>
            <div class="modal-body">
                <form id="formProduct">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="row">
                        <div class="col-md-6 form-group">
                            <label class="col-form-label" asp-for="Code"></label>
                            <input asp-for="Code"
                                   placeholder="Nombre Cliente"
                                   class="form-control" />
                            <span asp-validation-for="Code" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 form-group">
                            <label class="col-form-label" asp-for="ProductName"></label>
                            <input asp-for="ProductName"
                                   placeholder="Nombre Cliente"
                                   class="form-control" />
                            <span asp-validation-for="ProductName" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 form-group">
                            <label class="col-form-label" asp-for="Count"></label>
                            <input asp-for="Count"
                                   placeholder="Nombre Cliente"
                                   class="form-control" />
                            <span asp-validation-for="Count" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 form-group">
                            <label class="col-form-label" asp-for="Price"></label>
                            <input asp-for="Price"
                                   placeholder="Nombre Cliente"
                                   class="form-control" />
                            <span asp-validation-for="Price" class="text-danger"></span>
                        </div>
                    </div>

                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal" onclick="clearForm()">
                    <i class="fas fa-window-close"></i>
                    Cancelar
                </button>
                <button type="submit" class="btn btn-success" id="btnSave">
                    <i class="far fa-save"></i>
                    Guardar
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script type="text/javascript" charset="utf-8">

        var listProduct = [];
        let idProduct = '';

        $(document).ready(function () {

            $("#btnSave").click(function () {
                $("formProduct").submit(function (e) {
                    e.preventDefault();
                });
                saveProduct();
            });

            GetAllProducts();
        });

        function GetAllProducts() {
            modalProcessing(true, 'Cargando Productos');
            $.ajax({
                url: '@Url.Action("GetAllProducts", "Product")',
                method: 'GET',
                dataType: "json",
                success: function (data) {
                    modalProcessing(false);
                    console.log(data);
                    if (data.isSuccess) {
                        listProduct = data.result;
                        loadGrid(listProduct);
                    } else {
                        Swal.fire(
                            'Opps!',
                            data.message,
                            'error');
                    }
                },
                error: function (xhr, textStatus, errorThrown) {
                    modalProcessing(false);
                    console.error(xhr, textStatus, errorThrown);
                    swaMessage(xhr.status, xhr.responseJSON.message);
                }
            });
        }

        function loadGrid(data) {
            //llenar registro
            if ($.fn.dataTable.isDataTable('#tblProduct')) {
                var table = $('#tblProduct').DataTable();
                table.destroy();
                loadGridProduct(data);
                fillDataTable('tblProduct');
            }
            else {
                loadGridProduct(data);
                fillDataTable('tblProduct');
            }
        }

        function loadGridProduct(data) {
            $("#bodyProduct").html("");

            for (var i = 0; i < data.length; i++) {
                var tr = `
                                <tr>
                                    <th>`+ data[i].code + `</th>
                                    <th>`+ data[i].productName + `</th>
                                    <th>`+ data[i].count + `</th>
                                    <th>$`+ formatNumberWith2Decimal(data[i].price) + `</th>

                                <td>
                                    <button  class="btn btn-warning" onclick="editProduct(`+ data[i].id + `)"><i class="fas fa-pen-nib iconSpace"></i> Editar</button>
                                    <button class="btn btn-danger" onclick="deleteProduct(`+ data[i].id + `)"><i class="fas fa-trash-alt iconSpace"></i> Eliminar</button>
                                </td>
                                </tr>
                            `;
                $("#bodyProduct").append(tr);
            }
        }

        function deleteProduct(idProduct) {
            Swal.fire({
                title: '¿Confirmar Eliminacion?',
                text: "No podrás revertir esto.!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                cancelButtonText: 'Cancelar',
                confirmButtonText: 'Si, Eliminar!',
            }).then((result) => {
                if (result.isConfirmed) {
                    modalProcessing(true, 'Eliminando Producto');
                    $.ajax({
                        url: '@Url.Action("DeleteProduct", "Product")',
                        method: 'DELETE',
                        data: {
                            id: idProduct,
                        },
                        dataType: "json",
                        success: function (data) {
                            modalProcessing(false);
                            if (data.isSuccess) {
                                toastMessage('success', data.message);
                                listProduct = listProduct.filter(x => x.id != idProduct);
                                loadGrid(listProduct);
                            } else {
                                toastMessage('error', data.message);
                            }
                        },
                        error: function (xhr, textStatus, errorThrown) {
                            modalProcessing(false);
                            //toastMessage('error', 'Hubo un error al guardar, por favor intentarlo nuevamente!');
                            console.error(xhr, textStatus, errorThrown);
                            if (xhr.status == 400) {
                                Swal.fire(
                                    'Alerta!',
                                    xhr.responseJSON.message,
                                    'warning');
                            } else {
                                Swal.fire(
                                    'Opps!',
                                    xhr.responseJSON.message,
                                    'error');
                            }
                        }
                    });
                }

            });

        }

        function modalNewProduct() {
            clearForm();
            $("#Code").attr("disabled", false);
            $('#idTitleProduct').html('Nuevo Producto');
            const modal = new bootstrap.Modal('#modalProduct', {
                keyboard: true
            });
            modal.show();
        }

        function clearForm() {
            $("#Code").val("");
            $("#ProductName").val("");
            $("#Count").val("");
            $("#Price").val("");
            idProduct = '';
        }

        function editProduct(id){
            clearForm();
            idProduct=id;
            let product=listProduct.find(x=>x.id==idProduct);
            console.log(product);
            $("#Code").val(product.code);
            $("#ProductName").val(product.productName);
            $("#Count").val(product.count);
            $("#Price").val(product.price);

            $("#Code").attr("disabled",true);
            $('#idTitleProduct').html('Editar Producto');
            const modal = new bootstrap.Modal('#modalProduct', {
                keyboard: true
            });
            modal.show();
        }

        function saveProduct() {
            if (!$("#formProduct").valid()) {
                console.log("no es válido");
                return;
            }

            let params = {
                code: $("#Code").val(),
                productName: $("#ProductName").val(),
                count: $("#Count").val(),
                price: $("#Price").val(),
            };

            if (idProduct == '')
                insertProduct(params);
            else{
                params.id = idProduct;
                updateProduct(params);
            }
            console.log(params);

        }

        function insertProduct(product) {
            modalProcessing(true);
            $.ajax({
                url: '@Url.Action("InsertProduct", "Product")',
                method: 'POST',
                data: product,
                dataType: "json",
                success: function (data) {
                    modalProcessing(false);
                    console.log(data);
                    if (data.isSuccess) {
                        $('#modalProduct').modal('toggle');
                        GetAllProducts();
                        Swal.fire(
                            'Que bien!',
                            data.message,
                            'success');

                    } else {
                        Swal.fire(
                            'Opps!',
                            data.message,
                            'error');
                    }
                },
                error: function (xhr, textStatus, errorThrown) {
                    modalProcessing(false);
                    console.error(xhr, textStatus, errorThrown);
                    swaMessage(xhr.status, xhr.responseJSON.message);
                }
            });
        }

        function updateProduct(product) {
            modalProcessing(true);
            $.ajax({
                url: '@Url.Action("UpdateProduct", "Product")',
                method: 'PUT',
                data: product,
                dataType: "json",
                success: function (data) {
                    modalProcessing(false);
                    console.log(data);
                    if (data.isSuccess) {
                        $('#modalProduct').modal('toggle');
                        GetAllProducts();
                        Swal.fire(
                            'Que bien!',
                            data.message,
                            'success');

                    } else {
                        Swal.fire(
                            'Opps!',
                            data.message,
                            'error');
                    }
                },
                error: function (xhr, textStatus, errorThrown) {
                    modalProcessing(false);
                    console.error(xhr, textStatus, errorThrown);
                    swaMessage(xhr.status, xhr.responseJSON.message);
                }
            });
        }
    </script>

   }